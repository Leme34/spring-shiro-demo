<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- 创建filter对象,并进行配置 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!-- 登录页url -->
        <property name="loginUrl" value="login.html"/>
        <!-- 未认证跳转的url -->
        <property name="unauthorizedUrl" value="403.html" />
        <!-- 过滤器链,顺序为从上到下 -->
        <!--
                anon:无需认证访问的路径
                authc:认证后才能访问的路径,所以 /* 一般放在最下面
         -->
        <property name="filterChainDefinitions">
            <value>
                /login.html = anon
                /403.html = anon
                /subLogin = anon
                <!--/testRole1 = roles["admin","user"]-->
                /testRole2 = anyRoles["demoRole","user"]
                /testPermission = perms["user:insert","user:update","user:select"]
                /* = authc
            </value>
        </property>
        <!-- 配置自定义的AuthorizationFilter -->
        <property name="filters">
            <util:map>
                <entry key="anyRoles" value-ref="anyRolesFilter" />
            </util:map>
        </property>
    </bean>

    <!-- 创建加密后的密码认证器 -->
    <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher"
          id="credentialsMatcher">
        <property name="hashAlgorithmName" value="md5" />
        <property name="hashIterations" value="1"/>
    </bean>

    <!-- 创建自定义realm对象 -->
    <bean id="realm" class="com.lee.shiro.realm.CustomRealm">
        <!-- 配置加密后的密码认证器 -->
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>
    
    <!-- 创建SecurityManager对象,并设置realm -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="realm"/>
        <!-- 缓存管理器 -->
        <property name="cacheManager" ref="cacheManager" />
        <!--rememberMe cookie管理器-->
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>

    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager"
          class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <!--注入自定义cookie(主要是设置寿命, 默认的一年太长)-->
        <property name="cookie" ref="rememberMeCookie"/>
    </bean>

    <!--手动指定cookie-->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="604800"/><!-- 7天 -->
    </bean>

    <!--注册缓存管理器: 这里用ehcache插件(已被shiro集成)-->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <!--指定ehcache配置文件-->
        <property name="cacheManagerConfigFile" value="classpath:shiro/ehcache.xml"/>
    </bean>


    <!-- 自定义的AuthorizationFilter -->
    <bean id="anyRolesFilter" class="com.lee.filter.AnyRolesFilter" />

</beans>